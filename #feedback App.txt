#feedback App

#index.js


// Write your React code here.

import {Component} from 'react'

import './index.css'

class Feedback extends Component {
  state = {
    isFeedbackSelected: false,
  }

  onClickEmoji = () => this.setState({isFeedbackSelected: true})

  renderFeedbackQuestion = () => {
    const {resources} = this.props
    const {emojis} = resources

    return (
      <div className="feedback-question-container">
        <h1 className="feedback-question">
          How satisfied are you with our customer support performance
        </h1>
        <ul className="emojis-list">
          {emojis.map(emoji => (
            <li key={emoji.id}>
              <button
                type="button"
                className="emoji-btn"
                onClick={this.onClickEmoji}
              >
                <img src={emoji.imageUrl} alt={emoji.name} className="emoji" />
                <br />
                <span className="emoji-name">{emoji.name}</span>
              </button>
            </li>
          ))}
        </ul>
      </div>
    )
  }

  renderThankYouSection = () => {
    const {resources} = this.props
    const {loveEmojiUrl} = resources

    return (
      <div className="thank-you-container">
        <img src={loveEmojiUrl} alt="love emoji" className="love-emoji" />
        <h1 className="thank-you-text">Thank You!</h1>
        <p className="description">
          We will use your feedback to improve our customer support performance.
        </p>
      </div>
    )
  }

  render() {
    const {isFeedbackSelected} = this.state

    return (
      <div className="app-container">
        <div className="inner-container">
          {isFeedbackSelected
            ? this.renderThankYouSection()
            : this.renderFeedbackQuestion()}
        </div>
      </div>
    )
  }
}

export default Feedback



#index.css


/* Write your CSS code here. */

.app-container {
  background-image: linear-gradient(to right, #ffeeee, #ffc0bb);
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.inner-container {
  background-color: #ffffff;
  width: 80%;
  border-radius: 12px;
  max-width: 600px;
  padding: 24px;
}

@media screen and (min-width: 768px) {
  .inner-container {
    padding: 32px;
  }
}

@media screen and (min-width: 992px) {
  .inner-container {
    padding: 64px;
  }
}

.feedback-question-container {
  display: flex;
  flex-direction: column;
}

.feedback-question {
  text-align: center;
  color: #0f172a;
  font-family: 'Roboto';
  font-size: 18px;
  font-weight: 500;
}

@media screen and (min-width: 768px) {
  .feedback-question {
    font-size: 32px;
  }
}

.emojis-list {
  display: flex;
  justify-content: space-around;
  list-style-type: none;
  margin-top: 32px;
  padding: 0px;
}

.emoji-btn {
  border: none;
  background-color: #ffffff;
  cursor: pointer;
  outline: none;
}

.emoji {
  width: 45px;
  height: 45px;
  margin-bottom: 16px;
}

@media screen and (min-width: 768px) {
  .emoji {
    width: 70px;
    height: 70px;
  }
}

.emoji-name {
  color: #1e293b;
  font-family: 'Roboto';
  font-size: 16px;
}

@media screen and (min-width: 768px) {
  .emoji-name {
    font-size: 12px;
  }
}

.thank-you-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.love-emoji {
  width: 60px;
  height: 54px;
}

.thank-you-text {
  text-align: center;
  color: #0f172a;
  font-family: 'Roboto';
  font-size: 24px;
  font-weight: 500;
}

.description {
  text-align: center;
  color: #0f172a;
  font-family: 'Roboto';
  font-size: 16px;
  font-weight: 300;
}
